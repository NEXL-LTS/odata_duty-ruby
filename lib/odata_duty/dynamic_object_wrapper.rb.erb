Class.new(MapperBuilder) do
  def to_h
  <% properties.each do |property| %>
    <% if property.calling_method? %>
    <%= property.name %>_value = calling_methods.fetch(:<%= property.method_name %>).call(obj)
    <% elsif complex_type.respond_to?(:instance_methods) && complex_type.instance_methods.include?(property.method_name) %>
    <%= property.name %>_value = wrapped_obj.<%= property.method_name %>
    <% else %>
    <%= property.name %>_value = obj.<%= property.method_name %>
    <% end %>

  <% if property.collection? %>
    <% if property.scalar? %> 
      <% if property.boolean? %>
        <%= property.name %>_value&.map{ |rw| confirm_boolean("<%= property.name %>", rw) }
      <% elsif property.string? %>
        <%= property.name %>_value = <%= property.name %>_value&.map(&:to_str)
      <% elsif property.int? %>
        <%= property.name %>_value = <%= property.name %>_value&.map(&:to_int)
      <% elsif property.date? %>
        <%= property.name %>_value = <%= property.name %>_value&.map(&:to_date)&.map(&:iso8601)
      <% elsif property.datetime? %>
        <%= property.name %>_value = <%= property.name %>_value&.map(&:to_datetime)&.map(&:iso8601)
      <% else %>
        raise('<%= property.type %> Coming soon')
      <% end %>
    <% else %>
      <%= property.name %>_value = <%= property.name %>_value&.map{ |rw| @<%= property.name %>_mapper.obj_to_base_hash(rw) }
    <% end %>
  <% else %>
    <% if property.scalar? %> 
      <% if property.boolean? %>
        <%= property.name %>_value = confirm_boolean("<%= property.name %>", <%= property.name %>_value)
      <% elsif property.string? %>
        <%= property.name %>_value = <%= property.name %>_value&.to_str
      <% elsif property.int? %>
        <%= property.name %>_value = <%= property.name %>_value&.to_int
      <% elsif property.date? %>
        <%= property.name %>_value = <%= property.name %>_value&.to_date&.iso8601
      <% elsif property.datetime? %>
        <%= property.name %>_value = <%= property.name %>_value&.to_datetime&.iso8601
      <% elsif property.enum? %>
        <%= property.name %>_value = confirm_one_of("<%= property.name %>", <%= property.name %>_value, %w[<%= property.enum_members.map(&:name).join(' ') %>])
      <% else %>
        raise('<%= property.type %> Coming soon')
      <% end %>
    <% else %>
      <%= property.name %>_value = @<%= property.name %>_mapper.obj_to_base_hash(<%= property.name %>_value)
    <% end %>
  <% end %>
  <% end %>
    {
    <% properties.each do |property| %>
      '<%= property.name %>' => <% unless property.nullable? %>not_nullable("<%= property.name %>",<% end %><%= property.name %>_value<% unless property.nullable? %>)<% end %>,
    <% end %>
    }
  end

  def initialize_mappers
  <% properties.reject(&:scalar?).each do |property| %>
    @<%= property.name %>_mapper = MapperBuilder.build(complex_types.fetch(:<%= property.name %>))
  <% end %>
  end
end
